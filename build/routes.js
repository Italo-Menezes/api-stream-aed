"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.router = void 0;
const express_1 = __importDefault(require("express"));
const auth_controller_1 = require("./controllers/auth.controller");
const Categoreis_controller_1 = require("./controllers/Categoreis.controller");
const Courses_controller_1 = require("./controllers/Courses.controller");
const episodes_controller_1 = require("./controllers/episodes.controller");
const favorites_Controller_1 = require("./controllers/favorites.Controller");
const like_controller_1 = require("./controllers/like.controller");
const user_controllers_1 = require("./controllers/user.controllers");
const auth_middlewares_1 = require("./middlewares/auth.middlewares");
const router = express_1.default.Router();
exports.router = router;
router.post("/auth/register", auth_controller_1.authCOntrller.register);
router.post("/auth/login", auth_controller_1.authCOntrller.login);
router.get("/categories", auth_middlewares_1.ensureAuth, Categoreis_controller_1.categoriesController.index);
router.get("/categories/:id", auth_middlewares_1.ensureAuth, Categoreis_controller_1.categoriesController.show);
router.get("/courses/popular", auth_middlewares_1.ensureAuth, Courses_controller_1.coursesController.topTen);
router.get("/courses/newest", Courses_controller_1.coursesController.newest);
router.get("/courses/featured", Courses_controller_1.coursesController.featured);
router.get("/courses/search", auth_middlewares_1.ensureAuth, Courses_controller_1.coursesController.search);
router.get("/courses/:id", auth_middlewares_1.ensureAuth, Courses_controller_1.coursesController.show);
router.get('/favorites', auth_middlewares_1.ensureAuth, favorites_Controller_1.favoritesController.index);
router.post('/favorites', auth_middlewares_1.ensureAuth, favorites_Controller_1.favoritesController.save);
router.get("/episodes/stream", auth_middlewares_1.ensureAuthVideo, episodes_controller_1.episodesController.stream);
router.get('/episodes/:id/watchTime', auth_middlewares_1.ensureAuth, episodes_controller_1.episodesController.getWatchtime);
router.post('/episodes/:id/watchTime', auth_middlewares_1.ensureAuth, episodes_controller_1.episodesController.setWatchtime);
router.post('/likes', auth_middlewares_1.ensureAuth, like_controller_1.likesController.save);
router.get("/users/current/watching", auth_middlewares_1.ensureAuth, user_controllers_1.userController.watching);
router.get("/users/current", auth_middlewares_1.ensureAuth, user_controllers_1.userController.show);
router.put("/users/current", auth_middlewares_1.ensureAuth, user_controllers_1.userController.update);
router.put("/users/current/password", auth_middlewares_1.ensureAuth, user_controllers_1.userController.upudatePassword);
